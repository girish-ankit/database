create or replace PROCEDURE MSIL_PROC_FREE_WHEELING_LOG AS 
i   NUMBER := 0;
cnt NUMBER :=0;
--VEHICLENO VARCHAR2(15) :='CG04JA1522';
VEHICLENO VARCHAR2(100);
-- date formate must be in DD/MM/YYYY
FROMDATE  VARCHAR2(15) := TO_CHAR(SYSDATE - 90, 'DD/MM/YYYY');
TODATE    VARCHAR2(15) := TO_CHAR(SYSDATE, 'DD/MM/YYYY');
BEGIN
DELETE FROM MSIL_FREE_WHEELING_LOG_NEW WHERE CREATED < TO_DATE(SYSDATE - 91, 'DD-MON-YYYY');

FOR res IN (select EVM_REGN_NO FROM ETRK_VEHICLE_MST WHERE EVM_ISACTIVE=1)
--FOR res IN (select EVM_REGN_NO FROM ETRK_VEHICLE_MST WHERE EVM_ISACTIVE=1 AND EVM_REGN_NO IN ('HR38K7980', 'HR38L2154', 'CG04JA1522'))
LOOP
i := i + 1;
VEHICLENO := res.EVM_REGN_NO;

VEH_FREE_WHEELING(VEHICLENO, FROMDATE, TODATE);
SELECT COUNT(*) into cnt FROM TEMP_VEH_FREE_WHEELING;

--DBMS_OUTPUT.put_line (i || ' --> ' ||VEHICLENO || '---' || FROMDATE || '---' || TODATE || ' count= ' ||cnt);

IF cnt > 0 THEN

--DBMS_OUTPUT.put_line (i || ' --> ' ||VEHICLENO || '---' || FROMDATE || '---' || TODATE || ' count= ' ||cnt);

   INSERT 
INTO MSIL_FREE_WHEELING_LOG_NEW 
(REGN_NO, START_LOC, END_LOC, ERT, LRT, TOTAL_DISTANCE, START_LOC_LAT, START_LOC_LONG, END_LOC_LAT, END_LOC_LONG, MAX_SPEED)
SELECT REGN_NO, START_LOC, END_LOC, ERT, LRT, TOTAL_DISTANCE, START_LOC_LAT, START_LOC_LONG, END_LOC_LAT, END_LOC_LONG, MAX_SPEED FROM TEMP_VEH_FREE_WHEELING;

DBMS_OUTPUT.put_line (VEHICLENO ||' data has been inserted');

--DELETE FROM TEMP_VEH_FREE_WHEELING;
COMMIT;
END IF;

END LOOP;

--DBMS_OUTPUT.put_line ('Procedure Looping Example is done');
END MSIL_PROC_FREE_WHEELING_LOG;