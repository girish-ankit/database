#1>. created functions:
VOICE_ALERT_CHECK(EIM_MESSAGE); -- RETURNS BINARY VALUE
VOICE_ALERT_CHECK_DATA(EIM_MESSAGE) -- RETURNS 15TH COMMA SEPARATED VALUE

#2>. created table 'MSIL_VOICE_ALERT_LOG';

#3>. created procedure 'MSIL_PROC_VOICE_ALERT_LOG';

#4>. QUEREY TO INSERT DATA:

SELECT * FROM (SELECT EIM_REGN_NO, EIM_CUSTOMER_ID,  VOICE_ALERT_CHECK(EIM_MESSAGE) MSG_STATUS, EIM_MESSAGE_RECIEVED_TIME,EIM_CITY, EIM_LATITUDE, EIM_LONGITUDE FROM ETRK_IN_MSGS 
WHERE (EIM_MESSAGE_CREATED_TIME BETWEEN SYSDATE-1 AND SYSDATE) 
AND EIM_REGN_NO IN (SELECT EVM_REGN_NO FROM ETRK_VEHICLE_MST WHERE EVM_ISACTIVE=1 AND EVM_CURRENT_DEVICE_ID LIKE 'EEB%')
) WHERE MSG_STATUS !=0;

#5>. QUERY TO SELECT DATA:

SELECT * FROM MSIL_VOICE_ALERT_LOG ORDER BY MSG_STATUS DESC;



#6>.A vehicle has multiple records:

 SELECT EIM_REGN_NO, COUNT(*) cnt FROM MSIL_VOICE_ALERT_LOG GROUP BY EIM_REGN_NO ORDER BY cnt desc;

 -- DISTINCT RECORDS: (302)
 SELECT COUNT(DISTINCT EIM_REGN_NO) FROM MSIL_VOICE_ALERT_LOG;

 -- TOTAL RECORD(116415)

 SELECT COUNT(*) FROM MSIL_VOICE_ALERT_LOG;

 -- IMPORTANT QUERY

 SELECT * FROM MSIL_VOICE_ALERT_LOG ORDER BY EIM_REGN_NO;

 #7>. CREATED JOB HAVING NAME : 'MSIL_VOICE_ALERT_LOG_JOB'
 #8>. CREATED SCHEDULER HAVING NAME : 'MSIL_VOICE_ALERT_LOG_SCHEDULER'

